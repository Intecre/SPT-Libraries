<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="T_ComponentsCollection" Id="{d0fd4ea2-8a96-0365-36ba-9fa85df78835}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK T_ComponentsCollection EXTENDS T_CollectionBase IMPLEMENTS I_ComponentsCollection

]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Folder Name="Private" Id="{89468443-a97e-4a2a-9a02-94698d7f733f}" />
    <Method Name="AddComponent" Id="{fb6c4003-1a4c-0530-3ee6-4677519bc680}">
      <Declaration><![CDATA[METHOD PUBLIC AddComponent : BOOL
VAR_INPUT
  newComponent : I_ComponentBase;
END_VAR
VAR
	item : I_BaseFb;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF newComponent = 0 THEN
	LogError( 'Cannot AddComponent invalid ref' );
	RETURN;
END_IF

IF NOT __QUERYINTERFACE(newComponent, item) THEN
	LogError( 'Cannot AddComponent  NOT __QUERYINTERFACE(newComponent, item)' );
	RETURN;
END_IF

IF HasItem( item := item ) THEN
	LogWarning( 'Component already in collection.' );
	RETURN;
END_IF

AddComponent := addInSpareSlot( item := item );]]></ST>
      </Implementation>
    </Method>
    <Method Name="ClearGroup" Id="{9c85cafe-036b-0343-3a19-4d28e743b430}">
      <Declaration><![CDATA[METHOD PUBLIC ClearGroup // clears the group down]]></Declaration>
      <Implementation>
        <ST><![CDATA[SUPER^.ClearGroup();]]></ST>
      </Implementation>
    </Method>
    <Method Name="CyclicLogic" Id="{91fecff3-afbd-4edb-b80e-debfd3f550ae}">
      <Declaration><![CDATA[METHOD CyclicLogic
VAR
  i : UINT;
  Component : I_ComponentBase;
  item : I_BaseFb;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF Count = 0 THEN
  RETURN;
END_IF

FOR i := 0 TO Count -1 DO
	TryGetItem(i, item => item);
	__QUERYINTERFACE(item, component);
	IF component <> 0 THEN
  		Component.CyclicLogic();
	END_IF	
END_FOR]]></ST>
      </Implementation>
    </Method>
    <Method Name="TryGetComponent" Id="{2d1e8721-47b6-026d-04e2-daccf35cf2e5}">
      <Declaration><![CDATA[METHOD TryGetComponent: BOOL
VAR_INPUT
	index : UINT;
END_VAR
VAR_OUTPUT
	component : I_ComponentBase;
END_VAR
VAR
	item : I_BaseFb;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF NOT SUPER^.TryGetItem(index := index, item => item) THEN
	LogError( 'Cannot TryGetComponent NOT SUPER^.TryGetItem(index := index, item => item) ' );
	RETURN;
END_IF

IF NOT __QUERYINTERFACE(item, component) THEN
	LogError( 'Cannot TryGetComponent   NOT __QUERYINTERFACE(item, component) ' );
	RETURN;
END_IF

TryGetComponent := component <> 0;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="T_ComponentsCollection">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_ComponentsCollection.AddComponent">
      <LineId Id="3" Count="3" />
      <LineId Id="17" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="23" Count="0" />
      <LineId Id="18" Count="1" />
      <LineId Id="7" Count="5" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_ComponentsCollection.ClearGroup">
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="T_ComponentsCollection.CyclicLogic">
      <LineId Id="9" Count="0" />
      <LineId Id="11" Count="1" />
      <LineId Id="10" Count="0" />
      <LineId Id="4" Count="0" />
      <LineId Id="16" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="20" Count="0" />
      <LineId Id="7" Count="0" />
      <LineId Id="21" Count="0" />
      <LineId Id="8" Count="0" />
    </LineIds>
    <LineIds Name="T_ComponentsCollection.TryGetComponent">
      <LineId Id="30" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="32" Count="1" />
      <LineId Id="25" Count="4" />
      <LineId Id="23" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>